{% if section.settings.enable %}
{% assign grid_item_width = 'large--one-quarter medium--one-quarter' %}
{% assign hover_class = "grid__image--caption" %}
 {% assign fit_image_class = 'grid__item--variable-height grid__image' %}
<div class="product-recommendations" data-product-id="{{ product.id }}" data-limit="4">
  {%- if recommendations.products_count > 0 -%}
  <div class="product-related">
    <h1 class="text-center">{{ section.settings.heading }}</h1>
      <div class="grid--products grid--full image-gutters--{{ settings.image_gutter }}">
        {%- for product in recommendations.products -%}
{%- comment -%} Wholesale Gorilla: do not delete unless app is uninstalled{%- endcomment -%}
{%- assign wsgTempProd = product -%}{%- assign wsgExclude = false -%}{%- if forloop.first == true -%}{%- assign wsgActive = false -%}{%- assign wsgActiveCustomer = false -%}
{%- include 'wsg-status' wsgStatusAction: 'init' | strip -%}{%- endif -%}{%- if wsgActive -%}{%- include 'wsg-status' wsgStatusAction: 'col-item' | strip -%}{%- endif -%}{%- if wsgExclude -%} {%- continue -%} {%- endif -%}
{%- comment -%} end WSG {%- endcomment -%}
       {% comment %}
        <li class="product">
          <a href="{{ product.url }}">
            <img class="product__img" src="{{ product.featured_image | img_url: '300x300' }}" alt="{{ product.featured_image.alt }}" />
            <p class="product__title">{{ product.title }}</p>
            <p class="product__price">{{ product.price | money}}</p>
          </a>
        </li>
        {% endcomment %}
        {% include 'product-grid-item' %}
        {%- endfor -%}
      </div>
    {%- endif -%}
  </div>
</div>
  {%- endif -%}
{% schema %}
  {
    "name": "Product recommendations",
    "settings": [
      {
		"type": "checkbox",
		"label": "Enable product recommendations",
		"id": "enable",
		"default": true
      },
      {
		"type": "text",
		"id": "heading",
		"label": "Heading",
		"default": "You may also like"
      }
	]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
var loadProductRecommendationsIntoSection = function() {
  // Look for an element with class 'product-recommendations'
  var productRecommendationsSection = document.querySelector(".product-recommendations");
  if (productRecommendationsSection === null) { return; }
  // Read product id from data attribute
  var productId = productRecommendationsSection.dataset.productId;
  // Read limit from data attribute
  var limit = productRecommendationsSection.dataset.limit;
  // Build request URL
  var requestUrl = "/recommendations/products?section_id=product-recommendations&limit="+limit+"&product_id="+productId;
  // Create request and submit it using Ajax
  var request = new XMLHttpRequest();
  request.open("GET", requestUrl);
  request.onload = function() {
    if (request.status >= 200 && request.status < 300) {
      var container = document.createElement("div");
      container.innerHTML = request.response;
      productRecommendationsSection.parentElement.innerHTML = container.querySelector(".product-recommendations").innerHTML;
    }
  };
  request.send();
};
// If your section has theme settings, the theme editor
// reloads the section as you edit those settings. When that happens, the
// recommendations need to be fetched again.
// See https://help.shopify.com/en/themes/development/sections#understand-the-interaction-between-theme-javascript-and-the-theme-editor
document.addEventListener("shopify:section:load", function(event) {
  if (event.detail.sectionId === "product-recommendations") {
    loadProductRecommendationsIntoSection();
  }
});
// Fetching the recommendations on page load
loadProductRecommendationsIntoSection();
{% endjavascript %}
